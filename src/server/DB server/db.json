{
  "users": [
    { "id": "user-1",
      "githubId": "MaksimDiubo",
      "roles": ["author", "student", "supervisor", "course_manager"]
    },
    { "id": "user-2",
      "githubId": "Larkgronick",
      "roles": ["author", "student", "supervisor", "course_manager"]
    },
    { "id": "user-3",
      "githubId": "Shevel",
      "roles": ["author", "student", "supervisor", "course_manager"]
    },
    { "id": "user-4",
      "githubId": "alexeikravchuk",
      "roles": ["author", "student", "supervisor", "course_manager"]
    },
    { "id": "user-5",
      "githubId": "48lika48",
      "roles": ["author", "student", "supervisor", "course_manager"]
    },
    { "id": "user-6",
      "githubId": "thespirit3000",
      "roles": ["author", "student", "supervisor", "course_manager"]
    }
  ],
  "tasks" : [
    {
      "id": "xcheck",
      "description": "xcheck - приложение для проведения кросс чека приложений RSS",
      "startDate": "2020-09-22T13:34:17+03:00",
      "endDate": "2020-04-19T23:59:00+03:00",
      "goals": [],
      "requirements": [
        "Basic scope +50/+80",
        "Advanced scope +80",
        "Hacker scope +40",
        "Штрафные баллы"
      ],
      "subtasks": {
        "basic": [
          "Упрощённая страница/окно авторизации. +10",
          "Страница со списком задач (tasks). +10",
          "Форма (на отдельной странице или в окне) создания и редактирования задачи. +20",
          "Страница со списком запросов на проверку (review requests). +10",
          "Список запросов на проверку можно сортировать и фильтровать по заданию, выполнившему студенту и статусу. +10",
          "Форма создания запроса на проверку. +10",
          "Форма проверки и самопроверки задания. +20",
          "Страница со списком оценок работ (reviews). +10",
          "Список оценок можно сортировать по всем полям/колонкам, где сортировка применима. +10",
          "Список оценок можно фильтровать по заданию, выполнившему студенту и проверяющему. Есть . +10",
          "Страница или окно с деталями оценки одного проверяющего. +10",
          "Главная страница со ссылками на остальные доступные страницы ИЛИ всегда видимое меню для навигации. +10"
        ],
        "advanced": [
          "Пометить пункт как штраф ИЛИ возможность указать минимальный балл меньше 0. +10",
          "Пометить пункт как проверяемый только ментором (скрывать при кросс-чеке), или более сложная система ролей при проверке. +10",
          "Объединение требований в категории (basic scope, advanced, etc). +10",
          "Импорт пунктов и категорий в формате RSS Checklist; +10",
          "Импорт пунктов и категорий в markdown формате, в котором описано большинство задач RSS. +30",
          "Экспорт и импорт задания в собственном JSON формате. Побочный эффект - задание легко скопировать, оставив оригинальное без изменений. +20",
          "Кнопки для быстрой оценки (не выполнено - 0 баллов, выполнено частично - 50%, выполнено полностью - 100%), но остаётся возможность указать любое промежуточное значение. +10",
          "Дать возможность проверяющему добавить ещё один пункт со штрафными или поощрительными баллами. Способы реализации могут быть различными, например можно просто дать возможность указывать не только максимальный балл за требование, но и минимальный меньше ноля. +10",
          "Сделать поле комментария обязательным, если оценка не совпадает с самопроверкой. +10",
          "Промежуточное состояние проверки (и самопроверки тоже) можно сохранить, не публикуя её. +10",
          "Возможность оставить обратную связь проверяющему - поблагодарить или пожаловаться. +10",
          "Возможность оспорить оценку по каждому пункту. +30",
          "Принять решение по оспариваемому пункту может не только проверяющий, но и пользователь со специальной ролью. +10",
          "Страница со списком кросс-чек сессий. Автор заданий (или другая роль на ваше усмотрение) может создавать и редактировать сессии. +20",
          "Студенты могут создавать запросы на проверку в рамках конкретной кросс-чек сессии. +10",
          "Автор задания может остановить сбор запросов на проверку в рамках кросс-чек сессии и случайным образом распределить проверяющих. +10",
          "Автор задания может завершить кросс-чек сессию, после чего студент может посмотреть свою итоговую оценку. +10"
        ],
        "extra": [
          "Каждое действие, меняющее данные, доступно только при наличии у пользователя соответствующей роли. Набор ролей можно взять из примера или придумать свои. +30",
          "Полноценная авторизация через GitHub OAuth. Для удобства проверки выбор ролей лучше оставить при логине. +20",
          "В исходной базе (db.json) есть примеры сущностей каждого типа. +10",
          "В исходной базе (db.json) воспроизведено задание xcheck и создан запрос на его оценку. +10 бонусных очков за стиль",
          "Дополнительные полезные возможности, не описанные в требованиях к заданию. Для оценки должны обязательно быть описаны в README. до +30",
          "README файл в репозитории с описанием используемых технологий, инструкцией для начала разработки и для деплоя продакшн версии. +20",
          "Написаны юнит-тесты, code coverage > 50%. Способ получения coverage report описан в README. до +50",
          "По названиям юнит тестов понятно, что они тестируют. Тесты не просто вызывают код, но и делают осмысленные ассерты. до +30, если code coverage меньше 50%, максимальная оценка снижается пропорционально (при 25% максимум +15 баллов).",
          "Использован eslint preset (не обязательно airbnb) и нет предупреждений и ошибок. +20",
          "В репозитории есть \"следы\" активной командной работы - комментарии в пулл реквестах. +10"
        ],
        "fines": [
        ]
      },
      "score": {
        "basic": [
          10,
          10,
          20,
          10,
          10,
          10,
          20,
          10,
          10,
          10,
          10,
          10
        ],
        "advanced": [
          10,
          10,
          10,
          10,
          30,
          20,
          10,
          10,
          10,
          10,
          10,
          30,
          10,
          20,
          10,
          10,
          10
        ],
        "extra": [
          30,
          20,
          10,
          10,
          30,
          20,
          50,
          15,
          20,
          10
        ],
        "fines": [
        ]
      },
      "maxScore": 600,
      "author": "alexeikravchuk",
      "state": "PUBLISHED",
      "categoriesOrder": [],
      "items": []
    },
    {
      "id": "English for kids",
      "description": "English for kids - приложение для изучения английских слов детьми.",
      "startDate": "2020-09-22T13:34:17+03:00",
      "endDate": "2020-04-19T23:59:00+03:00",
      "goals": [],
      "requirements": [
        "Basic scope +50/+80",
        "Advanced scope +80",
        "Hacker scope +40",
        "Штрафные баллы"
      ],
      "subtasks": {
        "basic": [
          "Вёрстка, дизайн, UI главной страницы приложения: (",
          "Вёрстка, дизайн, UI выезжающего меню: (",
          "Вёрстка, дизайн, UI страницы категории: (",
          "Режим тренировки: (",
          "при клике по карточке звучит произношение слова на английском языке: (",
          "на каждой карточке есть кнопка, при клике по которой карточка поворачивается, на обратной стороне указан перевод слова. Когда курсор мыши перемещается за границы карточки, она автоматически поворачивается на лицевую сторону: (",
          "Выполнены требования к качеству кода (",
          "дублирование кода сведено к минимуму: (",
          "js-код разбит на модули: (",
          "подключены и используются webpack, eslint, eslint-config-airbnb-base, babel: ("
        ],
        "advanced": [
          "Режим игры: (",
          "кликом по переключателю Train/Play включается режим игры. В режиме игры указанные выше возможности режима тренировки отключаются, кнопка, при клике по которой карточка переворачивалась, и текст на карточке скрываются. Появляется кнопка \"Start game\". Размер карточки не изменяется. На карточке остаётся только изображение, которое занимает всю её площадь (если это не противоречит вашему дизайну): (",
          "после клика по кнопке \"Start game\" звучит английское произношение рандомного слова из тех, что находятся на странице. Для каждой страницы, и для каждой игры рандомные слова генерируются по-новой: (",
          "после первого клика по кнопке \"Start game\" надпись на ней меняется на иконку \"Repeat\", меняется внешний вид кнопки. При клике по кнопке \"Repeat\" произношение слова звучит ещё раз: (",
          "если пользователь кликнул по активной карточке с неправильным ответом, раздаётся звуковой сигнал \"error\": (",
          "если пользователь кликнул по активной карточке с правильным ответом, раздаётся звуковой сигнал \"correct\" и после него звучит произношение рандомного слова из тех, которые ещё не звучали: (",
          "карточка с угаданным словом становится неактивной, при этом изменяется её внешний вид. Клики по неактивной карточке звуковыми эффектами не сопровождаются, на счёт игры не влияют: (",
          "после начала игры каждый клик по активной карточке является правильным или неправильным ответом. Эти ответы отображаются в виде звёздочек (или других символов) разного цвета в шкале с рейтингом, которая появляется в режиме игры. Если звёздочек слишком много и шкала заполнена ими полностью, предыдущие звёздочки скрываются, а новые продолжают добавляться: (",
          "когда угаданы все слова в категории: ("
        ],
        "extra": [
          "Страница статистики: (",
          " страница со статистикой содержит перечень всех категорий, всех слов в каждой категории, перевод каждого слова. Минимальная ширина, при которой страница статистики отображается корректно – 320 рх. Не является ошибкой наличие в таблице со статистикой полосы прокрутки: (",
          "возле каждого слова указывается статистика - сколько раз по карточки с данным словом кликали в режиме тренировки, сколько раз данное слово угадывали в режиме игры, сколько ошибок при этом допустили, процент правильных ответов по каждому слову в режиме игры. После перезагрузки приложения статистика сохраняется: (",
          "есть возможность сортировки данных по алфавиту, для числовых значений - по их величине. Сортировка может происходить в прямом и обратном порядке и должна охватывать весь диапазон данных: (",
          "на странице со статистикой размещены кнопки \"Repeat difficult words\" и \"Reset\". Кнопка \"Reset\" обнуляет статистику. При клике по кнопке \"Repeat difficult words\" открывается страница изучения слов с наибольшим процентом ошибок аналогичная странице категории. На странице \"Repeat difficult words\" может размещаться от нуля до восьми слов, в зависимости от того сколько слов угадывалось в режиме игры и при их угадывании были допущены ошибки. После нажатия на кнопку \"Reset\" количество слов на странице \"Repeat difficult words\" равно нулю: ("
        ],
        "fines": [
          "меньше восьми категорий, меньше восьми слов в каждой категории, данные для двух последних категорий скопированы с демо, а не подготовлены самостоятельно: ",
          "не выполняются требования к pull request, репозиторию, названиям коммитов: ",
          "не выполняются требования к коду: "
        ]
      },
      "score": {
        "basic": [
          10,
          10,
          10,
          20,
          10,
          10,
          30,
          10,
          10,
          10
        ],
        "advanced": [
          80,
          10,
          10,
          10,
          10,
          10,
          10,
          10,
          10
        ],
        "extra": [
          40,
          10,
          10,
          10,
          10
        ],
        "fines": [
          -10,
          -10,
          -10
        ]
      },
      "maxScore": 370,
      "author": "alexeikravchuk",
      "state": "PUBLISHED",
      "categoriesOrder": [],
      "items": []
    },
    {
      "id": "RSS Fancy Weather",
      "description": "Вам необходимо создать приложение - прогноз погоды.\n\nПриложение состоит из четырёх функциональных блоков.\n  - Блок контроля\n  - Погода за сегодня\n  - Прогноз погоды на три дня\n  - Геолокационные данные",
      "startDate": "2020-11-22T00:00:00+03:00",
      "endDate": "2020-12-10T23:59:00+03:00",
      "goals": [],
      "requirements": [
        "Basic scope +80",
        "Advanced scope +80/+130",
        "Hacker scope +90",
        "Штрафные баллы"
      ],
      "subtasks": {
        "basic": [
          "Минимальная ширина страницы, при которой она отображается корректно – 320 рх. Все указанные в задании элементы присутствуют как на десктопной, так и на мобильной версии",
          "Приложение корректно отображается для любого выбранного языка, единиц измерения температуры, указанного в поиске населённого пункта",
          "Внешний вид приложения внешне соответствует макету или является его улучшенной версией",
          "В блоке \"Погода за сегодня\" корректно отображаются данные о погоде и местоположении пользователя",
          "В блоке \"Погода за сегодня\" корректно отображается дата в указанном в описании задания формате, часы, обновляющие время каждую секунду",
          "В блоке \"Прогноз погоды на три дня\" корректно отображаются данные, относящиеся к текущему местоположению пользователя",
          "В блоке \"Геолокационные данные\" корректно отображается карта с маской (форма карты отличная от прямоугольной) и маркером населённого пункта",
          "В блоке \"Геолокационные данные\" корректно отображаются координаты в градусах и минутах "
        ],
        "advanced": [
          "Реализован поиск. Поиск работает как при нажатии на клавишу Enter в поле поиска, так и при клике на кнопку Поиск",
          "Поиск корректно работает для разных населённых пунктов - больших и маленьких, столиц и посёлков",
          "При вводе в поле поиска некорректных запросов, по которому API возвращает ошибку, приложение не ломается, выводится уведомление об ошибке. Возникающие ошибки в работе с API (прерывание соединения в ходе запроса, возвращаемые ошибки от API типа 4xx, 5xx) также обрабатываются клиентом и выводятся в область уведомления об ошибке",
          "Дата и время указываются для того часового пояса, в котором находится указанный в поле поиска населённый пункт",
          "Если у координаты есть знак минус, он тоже выводится, или возле координаты выводится буква, обозначающая широту (северная (N), южная (S)) и долготу (восточная (E), западная (W))",
          "Одновременное обновление всех элементов страницы при вводе нового населенного пункта после получения успешного ответа по каждому из запросов (название по локации приходит быстро, а погода, иконки ее и т.п. - медленно). В случае возникновения ошибки по одному из запросов данные не обновляются",
          "Фоновое изображение генерируется с учётом поры года и времени суток указанного в поле поиска населённого пункта (по желанию можно добавлять и другие параметры поиска). Если возникла ошибка в ходе получения картинки, использовать любое стандартное фоновое изображение. Так как API для картинок не всегда возвращает правильный результат, данные о параметрах запроса фонового изображения для удобства в ходе проверки ментором или в процессе кросс чека выведите в консоль",
          "Плавная смена фонового изображения, изображение сначала загружается и только потом меняется, у изображения есть полупрозрачный оверлей или используется другой способ, обеспечивающий чёткость и контрастность надписей",
          "При смене шкалы отображения температур происходит пересчёт температур в соответствии с выбранной шкалой и меняется отображение активной кнопки, позволяющей определить, какая шкала сейчас активна. При перезагрузке страницы сохраняется выбранная пользователем шкала отображения температур"
        ],
        "extra": [
          "Есть возможность включения/ выключения микрофона по клику, есть индикация активного и неактивного состояния микрофона",
          "",
          "После того, как название населённого пункта произнесено, поиск срабатывает автоматически, без необходимости кликать на кнопку",
          "Поиск ведётся на языке отображения страницы, если срабатывает поиск и на другом языке тоже, это не является ошибкой",
          "",
          "При клике по кнопке проигрывания звука есть возможность прослушать звуковое уведомление о прогнозе погоды",
          "Голосовое уведомление о прогнозе погоды можно запустить произнеся кодовую фразу",
          "Голосом можно регулировать громкость уведомления",
          "Кодовые фразы управления громкостью не запускают поиск по названию населенного пункта",
          "",
          "Переводится весь текст страницы. Не является ошибкой отсутствие перевода карты",
          "Название населённого пункта и страны всегда отображается на выбранном языке",
          "Перевод на текущий выбранный язык названий дней недели и месяцев",
          "При перезагрузке страницы сохраняется выбранный пользователем язык",
          "",
          "Оригинальный интересный качественный дизайн приложения, иконки погоды и кнопки анимированы, для анимации используются ключевые кадры или svg-анимация",
          "Продуман и реализован не предусмотренный заданием дополнительный функционал"
        ],
        "fines": [
          "используются ключи доступа к API указанные в задании, а не свои личные",
          "меньше 5 коммитов, ошибки в названиях коммитов, ошибки в pull request",
          "присутствуют ошибки в консоли, связанные с исполняемым кодом (ошибки типа favicon.ico: Failed to load resource: the server responded with a status of 404 или ошибки, связанные с запросами к API, не учитываются) или предупреждения eslint-config-airbnb-base (оценивает только ментор)"
        ]
      },
      "score": {
        "basic": [
          10,
          10,
          10,
          10,
          10,
          10,
          10,
          10
        ],
        "advanced": [
          5,
          10,
          10,
          10,
          5,
          10,
          10,
          10,
          10
        ],
        "extra": [
          5,
          0,
          10,
          5,
          0,
          5,
          5,
          5,
          5,
          0,
          10,
          10,
          5,
          5,
          0,
          10,
          10
        ],
        "fines": [
          -10,
          -10,
          -15
        ]
      },
      "maxScore": 250,
      "author": "alexeikravchuk",
      "state": "PUBLISHED",
      "categoriesOrder": [],
      "items": []
    }
  ],
  "checkSessions": [
    {
      "id": "xcheck",
      "state": "CROSS_CHECK",
      "taskId": "xcheck",
      "coefficient": 0.7,
      "startDate": "2020-07-07",
      "endDate": "2020-07-14",
      "discardMinScore": true,
      "discardMaxScore": false,
      "minReiewsAmount": 1,
      "desiredReviewersAmount": 2,
      "attendees": [
        {"githubId": "thespirit3000", "reviewerOf": ["MaksimDiubo", "Larkgronick"]},
        {"githubId": "alexeikravchuk", "reviewerOf": ["MaksimDiubo", "Larkgronick"]},
        {"githubId": "MaksimDiubo", "reviewerOf": ["thespirit3000", "Larkgronick"]}
      ]
    },
      {
        "taskId": "English for kids",
        "coefficient": 1,
        "desiredReviewersAmount": 2,
        "discardMinScore": true,
        "startDate": "2020-09-01T16:43:58+03:00",
        "endDate": "2020-09-29T16:43:58+03:00",
        "id": "English for kids-crossCheck",
        "state": "REQUESTS_GATHERING",
        "attendees": []
      },
      {
        "taskId": "RSS Fancy Weather",
        "coefficient": 0.7,
        "desiredReviewersAmount": 2,
        "startDate": "2020-09-01T19:01:19+03:00",
        "endDate": "2020-09-22T19:01:19+03:00",
        "id": "RSS Fancy Weather-crossCheck",
        "state": "REQUESTS_GATHERING",
        "attendees": []
      }
  ],
  "reviewRequests": [
    {
      "id": "rev-req-2",
      "crossCheckSessionId": "xcheck",
      "author": "MaksimDiubo",
      "task": "xcheck",
      "state": "PUBLISHED",
      "url": "",
      "urlPR": "",
      "selfGrade": {
        "task": "xcheck",
        "items": [
          {
            "id": "basic_item_0",
            "score": 10,
            "subtask": "Упрощённая страница/окно авторизации. +10"
          },
          {
            "id": "basic_item_1",
            "score": 10,
            "subtask": "Страница со списком задач (tasks). +10"
          },
          {
            "id": "basic_item_2",
            "score": 20,
            "subtask": "Форма (на отдельной странице или в окне) создания и редактирования задачи. +20"
          },
          {
            "id": "basic_item_3",
            "score": 10,
            "subtask": "Страница со списком запросов на проверку (review requests). +10"
          },
          {
            "id": "basic_item_4",
            "score": 10,
            "subtask": "Список запросов на проверку можно сортировать и фильтровать по заданию, выполнившему студенту и статусу. +10"
          },
          {
            "id": "basic_item_5",
            "score": 10,
            "subtask": "Форма создания запроса на проверку. +10"
          },
          {
            "id": "basic_item_6",
            "score": 20,
            "subtask": "Форма проверки и самопроверки задания. +20"
          },
          {
            "id": "basic_item_7",
            "score": 10,
            "subtask": "Страница со списком оценок работ (reviews). +10"
          },
          {
            "id": "basic_item_8",
            "score": 10,
            "subtask": "Список оценок можно сортировать по всем полям/колонкам, где сортировка применима. +10"
          },
          {
            "id": "basic_item_9",
            "score": 10,
            "subtask": "Список оценок можно фильтровать по заданию, выполнившему студенту и проверяющему. Есть . +10"
          },
          {
            "id": "basic_item_10",
            "score": 10,
            "subtask": "Страница или окно с деталями оценки одного проверяющего. +10"
          },
          {
            "id": "basic_item_11",
            "score": 10,
            "subtask": "Главная страница со ссылками на остальные доступные страницы ИЛИ всегда видимое меню для навигации. +10"
          },
          {
            "id": "advanced_item_0",
            "score": 10,
            "subtask": "Пометить пункт как штраф ИЛИ возможность указать минимальный балл меньше 0. +10"
          },
          {
            "id": "advanced_item_1",
            "score": 10,
            "subtask": "Пометить пункт как проверяемый только ментором (скрывать при кросс-чеке), или более сложная система ролей при проверке. +10"
          },
          {
            "id": "advanced_item_2",
            "score": 10,
            "subtask": "Объединение требований в категории (basic scope, advanced, etc). +10"
          },
          {
            "id": "advanced_item_3",
            "score": 10,
            "subtask": "Импорт пунктов и категорий в формате RSS Checklist; +10"
          },
          {
            "id": "advanced_item_4",
            "score": 30,
            "subtask": "Импорт пунктов и категорий в markdown формате, в котором описано большинство задач RSS. +30"
          },
          {
            "id": "advanced_item_5",
            "score": 20,
            "subtask": "Экспорт и импорт задания в собственном JSON формате. Побочный эффект - задание легко скопировать, оставив оригинальное без изменений. +20"
          },
          {
            "id": "advanced_item_6",
            "score": 10,
            "subtask": "Кнопки для быстрой оценки (не выполнено - 0 баллов, выполнено частично - 50%, выполнено полностью - 100%), но остаётся возможность указать любое промежуточное значение. +10"
          },
          {
            "id": "advanced_item_7",
            "score": 10,
            "subtask": "Дать возможность проверяющему добавить ещё один пункт со штрафными или поощрительными баллами. Способы реализации могут быть различными, например можно просто дать возможность указывать не только максимальный балл за требование, но и минимальный меньше ноля. +10"
          },
          {
            "id": "advanced_item_8",
            "score": 10,
            "subtask": "Сделать поле комментария обязательным, если оценка не совпадает с самопроверкой. +10"
          },
          {
            "id": "advanced_item_9",
            "score": 10,
            "subtask": "Промежуточное состояние проверки (и самопроверки тоже) можно сохранить, не публикуя её. +10"
          },
          {
            "id": "advanced_item_10",
            "score": 10,
            "subtask": "Возможность оставить обратную связь проверяющему - поблагодарить или пожаловаться. +10"
          },
          {
            "id": "advanced_item_11",
            "score": 30,
            "subtask": "Возможность оспорить оценку по каждому пункту. +30"
          },
          {
            "id": "advanced_item_12",
            "score": 10,
            "subtask": "Принять решение по оспариваемому пункту может не только проверяющий, но и пользователь со специальной ролью. +10"
          },
          {
            "id": "advanced_item_13",
            "score": 20,
            "subtask": "Страница со списком кросс-чек сессий. Автор заданий (или другая роль на ваше усмотрение) может создавать и редактировать сессии. +20"
          },
          {
            "id": "advanced_item_14",
            "score": 10,
            "subtask": "Студенты могут создавать запросы на проверку в рамках конкретной кросс-чек сессии. +10"
          },
          {
            "id": "advanced_item_15",
            "score": 10,
            "subtask": "Автор задания может остановить сбор запросов на проверку в рамках кросс-чек сессии и случайным образом распределить проверяющих. +10"
          },
          {
            "id": "advanced_item_16",
            "score": 10,
            "subtask": "Автор задания может завершить кросс-чек сессию, после чего студент может посмотреть свою итоговую оценку. +10"
          },
          {
            "id": "extra_item_0",
            "score": 30,
            "subtask": "Каждое действие, меняющее данные, доступно только при наличии у пользователя соответствующей роли. Набор ролей можно взять из примера или придумать свои. +30"
          },
          {
            "id": "extra_item_1",
            "score": 20,
            "subtask": "Полноценная авторизация через GitHub OAuth. Для удобства проверки выбор ролей лучше оставить при логине. +20"
          },
          {
            "id": "extra_item_2",
            "score": 10,
            "subtask": "В исходной базе (db.json) есть примеры сущностей каждого типа. +10"
          },
          {
            "id": "extra_item_3",
            "score": 10,
            "subtask": "В исходной базе (db.json) воспроизведено задание xcheck и создан запрос на его оценку. +10 бонусных очков за стиль"
          },
          {
            "id": "extra_item_4",
            "score": 30,
            "subtask": "Дополнительные полезные возможности, не описанные в требованиях к заданию. Для оценки должны обязательно быть описаны в README. до +30"
          },
          {
            "id": "extra_item_5",
            "score": 20,
            "subtask": "README файл в репозитории с описанием используемых технологий, инструкцией для начала разработки и для деплоя продакшн версии. +20"
          },
          {
            "id": "extra_item_6",
            "score": 50,
            "subtask": "Написаны юнит-тесты, code coverage > 50%. Способ получения coverage report описан в README. до +50"
          },
          {
            "id": "extra_item_7",
            "score": 15,
            "subtask": "По названиям юнит тестов понятно, что они тестируют. Тесты не просто вызывают код, но и делают осмысленные ассерты. до +30, если code coverage меньше 50%, максимальная оценка снижается пропорционально (при 25% максимум +15 баллов)."
          },
          {
            "id": "extra_item_8",
            "score": 20,
            "subtask": "Использован eslint preset (не обязательно airbnb) и нет предупреждений и ошибок. +20"
          },
          {
            "id": "extra_item_9",
            "score": 10,
            "subtask": "В репозитории есть \"следы\" активной командной работы - комментарии в пулл реквестах. +10"
          }
        ]
      }
    },
    {
      "id": "rev-req-3",
      "crossCheckSessionId": "xcheck",
      "author": "Larkgronick",
      "task": "xcheck",
      "state": "PUBLISHED",
      "url": "",
      "urlPR": "",
      "selfGrade": {
        "task": "xcheck",
        "items": [
          {
            "id": "basic_item_0",
            "score": 10,
            "subtask": "Упрощённая страница/окно авторизации. +10"
          },
          {
            "id": "basic_item_1",
            "score": 10,
            "subtask": "Страница со списком задач (tasks). +10"
          },
          {
            "id": "basic_item_2",
            "score": 20,
            "subtask": "Форма (на отдельной странице или в окне) создания и редактирования задачи. +20"
          },
          {
            "id": "basic_item_3",
            "score": 10,
            "subtask": "Страница со списком запросов на проверку (review requests). +10"
          },
          {
            "id": "basic_item_4",
            "score": 10,
            "subtask": "Список запросов на проверку можно сортировать и фильтровать по заданию, выполнившему студенту и статусу. +10"
          },
          {
            "id": "basic_item_5",
            "score": 10,
            "subtask": "Форма создания запроса на проверку. +10"
          },
          {
            "id": "basic_item_6",
            "score": 20,
            "subtask": "Форма проверки и самопроверки задания. +20"
          },
          {
            "id": "basic_item_7",
            "score": 10,
            "subtask": "Страница со списком оценок работ (reviews). +10"
          },
          {
            "id": "basic_item_8",
            "score": 10,
            "subtask": "Список оценок можно сортировать по всем полям/колонкам, где сортировка применима. +10"
          },
          {
            "id": "basic_item_9",
            "score": 10,
            "subtask": "Список оценок можно фильтровать по заданию, выполнившему студенту и проверяющему. Есть . +10"
          },
          {
            "id": "basic_item_10",
            "score": 10,
            "subtask": "Страница или окно с деталями оценки одного проверяющего. +10"
          },
          {
            "id": "basic_item_11",
            "score": 10,
            "subtask": "Главная страница со ссылками на остальные доступные страницы ИЛИ всегда видимое меню для навигации. +10"
          },
          {
            "id": "advanced_item_0",
            "score": 10,
            "subtask": "Пометить пункт как штраф ИЛИ возможность указать минимальный балл меньше 0. +10"
          },
          {
            "id": "advanced_item_1",
            "score": 10,
            "subtask": "Пометить пункт как проверяемый только ментором (скрывать при кросс-чеке), или более сложная система ролей при проверке. +10"
          },
          {
            "id": "advanced_item_2",
            "score": 10,
            "subtask": "Объединение требований в категории (basic scope, advanced, etc). +10"
          },
          {
            "id": "advanced_item_3",
            "score": 10,
            "subtask": "Импорт пунктов и категорий в формате RSS Checklist; +10"
          },
          {
            "id": "advanced_item_4",
            "score": 30,
            "subtask": "Импорт пунктов и категорий в markdown формате, в котором описано большинство задач RSS. +30"
          },
          {
            "id": "advanced_item_5",
            "score": 20,
            "subtask": "Экспорт и импорт задания в собственном JSON формате. Побочный эффект - задание легко скопировать, оставив оригинальное без изменений. +20"
          },
          {
            "id": "advanced_item_6",
            "score": 10,
            "subtask": "Кнопки для быстрой оценки (не выполнено - 0 баллов, выполнено частично - 50%, выполнено полностью - 100%), но остаётся возможность указать любое промежуточное значение. +10"
          },
          {
            "id": "advanced_item_7",
            "score": 10,
            "subtask": "Дать возможность проверяющему добавить ещё один пункт со штрафными или поощрительными баллами. Способы реализации могут быть различными, например можно просто дать возможность указывать не только максимальный балл за требование, но и минимальный меньше ноля. +10"
          },
          {
            "id": "advanced_item_8",
            "score": 10,
            "subtask": "Сделать поле комментария обязательным, если оценка не совпадает с самопроверкой. +10"
          },
          {
            "id": "advanced_item_9",
            "score": 10,
            "subtask": "Промежуточное состояние проверки (и самопроверки тоже) можно сохранить, не публикуя её. +10"
          },
          {
            "id": "advanced_item_10",
            "score": 10,
            "subtask": "Возможность оставить обратную связь проверяющему - поблагодарить или пожаловаться. +10"
          },
          {
            "id": "advanced_item_11",
            "score": 30,
            "subtask": "Возможность оспорить оценку по каждому пункту. +30"
          },
          {
            "id": "advanced_item_12",
            "score": 10,
            "subtask": "Принять решение по оспариваемому пункту может не только проверяющий, но и пользователь со специальной ролью. +10"
          },
          {
            "id": "advanced_item_13",
            "score": 20,
            "subtask": "Страница со списком кросс-чек сессий. Автор заданий (или другая роль на ваше усмотрение) может создавать и редактировать сессии. +20"
          },
          {
            "id": "advanced_item_14",
            "score": 10,
            "subtask": "Студенты могут создавать запросы на проверку в рамках конкретной кросс-чек сессии. +10"
          },
          {
            "id": "advanced_item_15",
            "score": 10,
            "subtask": "Автор задания может остановить сбор запросов на проверку в рамках кросс-чек сессии и случайным образом распределить проверяющих. +10"
          },
          {
            "id": "advanced_item_16",
            "score": 10,
            "subtask": "Автор задания может завершить кросс-чек сессию, после чего студент может посмотреть свою итоговую оценку. +10"
          },
          {
            "id": "extra_item_0",
            "score": 30,
            "subtask": "Каждое действие, меняющее данные, доступно только при наличии у пользователя соответствующей роли. Набор ролей можно взять из примера или придумать свои. +30"
          },
          {
            "id": "extra_item_1",
            "score": 20,
            "subtask": "Полноценная авторизация через GitHub OAuth. Для удобства проверки выбор ролей лучше оставить при логине. +20"
          },
          {
            "id": "extra_item_2",
            "score": 10,
            "subtask": "В исходной базе (db.json) есть примеры сущностей каждого типа. +10"
          },
          {
            "id": "extra_item_3",
            "score": 10,
            "subtask": "В исходной базе (db.json) воспроизведено задание xcheck и создан запрос на его оценку. +10 бонусных очков за стиль"
          },
          {
            "id": "extra_item_4",
            "score": 30,
            "subtask": "Дополнительные полезные возможности, не описанные в требованиях к заданию. Для оценки должны обязательно быть описаны в README. до +30"
          },
          {
            "id": "extra_item_5",
            "score": 20,
            "subtask": "README файл в репозитории с описанием используемых технологий, инструкцией для начала разработки и для деплоя продакшн версии. +20"
          },
          {
            "id": "extra_item_6",
            "score": 50,
            "subtask": "Написаны юнит-тесты, code coverage > 50%. Способ получения coverage report описан в README. до +50"
          },
          {
            "id": "extra_item_7",
            "score": 15,
            "subtask": "По названиям юнит тестов понятно, что они тестируют. Тесты не просто вызывают код, но и делают осмысленные ассерты. до +30, если code coverage меньше 50%, максимальная оценка снижается пропорционально (при 25% максимум +15 баллов)."
          },
          {
            "id": "extra_item_8",
            "score": 20,
            "subtask": "Использован eslint preset (не обязательно airbnb) и нет предупреждений и ошибок. +20"
          },
          {
            "id": "extra_item_9",
            "score": 10,
            "subtask": "В репозитории есть \"следы\" активной командной работы - комментарии в пулл реквестах. +10"
          }
        ]
      }
    },
    {
      "id": "rev-req-20",
      "crossCheckSessionId": "xcheck",
      "author": "Shevel",
      "task": "xcheck",
      "state": "PUBLISHED",
      "url": "",
      "urlPR": "",
      "selfGrade": {
        "task": "xcheck",
        "items": [
          {
            "id": "basic_item_0",
            "score": 10,
            "subtask": "Упрощённая страница/окно авторизации. +10"
          },
          {
            "id": "basic_item_1",
            "score": 10,
            "subtask": "Страница со списком задач (tasks). +10"
          },
          {
            "id": "basic_item_2",
            "score": 20,
            "subtask": "Форма (на отдельной странице или в окне) создания и редактирования задачи. +20"
          },
          {
            "id": "basic_item_3",
            "score": 10,
            "subtask": "Страница со списком запросов на проверку (review requests). +10"
          },
          {
            "id": "basic_item_4",
            "score": 10,
            "subtask": "Список запросов на проверку можно сортировать и фильтровать по заданию, выполнившему студенту и статусу. +10"
          },
          {
            "id": "basic_item_5",
            "score": 10,
            "subtask": "Форма создания запроса на проверку. +10"
          },
          {
            "id": "basic_item_6",
            "score": 20,
            "subtask": "Форма проверки и самопроверки задания. +20"
          },
          {
            "id": "basic_item_7",
            "score": 10,
            "subtask": "Страница со списком оценок работ (reviews). +10"
          },
          {
            "id": "basic_item_8",
            "score": 10,
            "subtask": "Список оценок можно сортировать по всем полям/колонкам, где сортировка применима. +10"
          },
          {
            "id": "basic_item_9",
            "score": 10,
            "subtask": "Список оценок можно фильтровать по заданию, выполнившему студенту и проверяющему. Есть . +10"
          },
          {
            "id": "basic_item_10",
            "score": 10,
            "subtask": "Страница или окно с деталями оценки одного проверяющего. +10"
          },
          {
            "id": "basic_item_11",
            "score": 10,
            "subtask": "Главная страница со ссылками на остальные доступные страницы ИЛИ всегда видимое меню для навигации. +10"
          },
          {
            "id": "advanced_item_0",
            "score": 10,
            "subtask": "Пометить пункт как штраф ИЛИ возможность указать минимальный балл меньше 0. +10"
          },
          {
            "id": "advanced_item_1",
            "score": 10,
            "subtask": "Пометить пункт как проверяемый только ментором (скрывать при кросс-чеке), или более сложная система ролей при проверке. +10"
          },
          {
            "id": "advanced_item_2",
            "score": 10,
            "subtask": "Объединение требований в категории (basic scope, advanced, etc). +10"
          },
          {
            "id": "advanced_item_3",
            "score": 10,
            "subtask": "Импорт пунктов и категорий в формате RSS Checklist; +10"
          },
          {
            "id": "advanced_item_4",
            "score": 30,
            "subtask": "Импорт пунктов и категорий в markdown формате, в котором описано большинство задач RSS. +30"
          },
          {
            "id": "advanced_item_5",
            "score": 20,
            "subtask": "Экспорт и импорт задания в собственном JSON формате. Побочный эффект - задание легко скопировать, оставив оригинальное без изменений. +20"
          },
          {
            "id": "advanced_item_6",
            "score": 10,
            "subtask": "Кнопки для быстрой оценки (не выполнено - 0 баллов, выполнено частично - 50%, выполнено полностью - 100%), но остаётся возможность указать любое промежуточное значение. +10"
          },
          {
            "id": "advanced_item_7",
            "score": 10,
            "subtask": "Дать возможность проверяющему добавить ещё один пункт со штрафными или поощрительными баллами. Способы реализации могут быть различными, например можно просто дать возможность указывать не только максимальный балл за требование, но и минимальный меньше ноля. +10"
          },
          {
            "id": "advanced_item_8",
            "score": 10,
            "subtask": "Сделать поле комментария обязательным, если оценка не совпадает с самопроверкой. +10"
          },
          {
            "id": "advanced_item_9",
            "score": 10,
            "subtask": "Промежуточное состояние проверки (и самопроверки тоже) можно сохранить, не публикуя её. +10"
          },
          {
            "id": "advanced_item_10",
            "score": 10,
            "subtask": "Возможность оставить обратную связь проверяющему - поблагодарить или пожаловаться. +10"
          },
          {
            "id": "advanced_item_11",
            "score": 30,
            "subtask": "Возможность оспорить оценку по каждому пункту. +30"
          },
          {
            "id": "advanced_item_12",
            "score": 10,
            "subtask": "Принять решение по оспариваемому пункту может не только проверяющий, но и пользователь со специальной ролью. +10"
          },
          {
            "id": "advanced_item_13",
            "score": 20,
            "subtask": "Страница со списком кросс-чек сессий. Автор заданий (или другая роль на ваше усмотрение) может создавать и редактировать сессии. +20"
          },
          {
            "id": "advanced_item_14",
            "score": 10,
            "subtask": "Студенты могут создавать запросы на проверку в рамках конкретной кросс-чек сессии. +10"
          },
          {
            "id": "advanced_item_15",
            "score": 10,
            "subtask": "Автор задания может остановить сбор запросов на проверку в рамках кросс-чек сессии и случайным образом распределить проверяющих. +10"
          },
          {
            "id": "advanced_item_16",
            "score": 10,
            "subtask": "Автор задания может завершить кросс-чек сессию, после чего студент может посмотреть свою итоговую оценку. +10"
          },
          {
            "id": "extra_item_0",
            "score": 30,
            "subtask": "Каждое действие, меняющее данные, доступно только при наличии у пользователя соответствующей роли. Набор ролей можно взять из примера или придумать свои. +30"
          },
          {
            "id": "extra_item_1",
            "score": 20,
            "subtask": "Полноценная авторизация через GitHub OAuth. Для удобства проверки выбор ролей лучше оставить при логине. +20"
          },
          {
            "id": "extra_item_2",
            "score": 10,
            "subtask": "В исходной базе (db.json) есть примеры сущностей каждого типа. +10"
          },
          {
            "id": "extra_item_3",
            "score": 10,
            "subtask": "В исходной базе (db.json) воспроизведено задание xcheck и создан запрос на его оценку. +10 бонусных очков за стиль"
          },
          {
            "id": "extra_item_4",
            "score": 30,
            "subtask": "Дополнительные полезные возможности, не описанные в требованиях к заданию. Для оценки должны обязательно быть описаны в README. до +30"
          },
          {
            "id": "extra_item_5",
            "score": 20,
            "subtask": "README файл в репозитории с описанием используемых технологий, инструкцией для начала разработки и для деплоя продакшн версии. +20"
          },
          {
            "id": "extra_item_6",
            "score": 50,
            "subtask": "Написаны юнит-тесты, code coverage > 50%. Способ получения coverage report описан в README. до +50"
          },
          {
            "id": "extra_item_7",
            "score": 15,
            "subtask": "По названиям юнит тестов понятно, что они тестируют. Тесты не просто вызывают код, но и делают осмысленные ассерты. до +30, если code coverage меньше 50%, максимальная оценка снижается пропорционально (при 25% максимум +15 баллов)."
          },
          {
            "id": "extra_item_8",
            "score": 20,
            "subtask": "Использован eslint preset (не обязательно airbnb) и нет предупреждений и ошибок. +20"
          },
          {
            "id": "extra_item_9",
            "score": 10,
            "subtask": "В репозитории есть \"следы\" активной командной работы - комментарии в пулл реквестах. +10"
          }
        ]
      }
    },
    {
      "id": "rev-req-21",
      "crossCheckSessionId": "xcheck",
      "author": "alexeikravchuk",
      "task": "xcheck",
      "state": "PUBLISHED",
      "url": "",
      "urlPR": "",
      "selfGrade": {
        "task": "xcheck",
        "items": [
          {
            "id": "basic_item_0",
            "score": 10,
            "subtask": "Упрощённая страница/окно авторизации. +10"
          },
          {
            "id": "basic_item_1",
            "score": 10,
            "subtask": "Страница со списком задач (tasks). +10"
          },
          {
            "id": "basic_item_2",
            "score": 20,
            "subtask": "Форма (на отдельной странице или в окне) создания и редактирования задачи. +20"
          },
          {
            "id": "basic_item_3",
            "score": 10,
            "subtask": "Страница со списком запросов на проверку (review requests). +10"
          },
          {
            "id": "basic_item_4",
            "score": 10,
            "subtask": "Список запросов на проверку можно сортировать и фильтровать по заданию, выполнившему студенту и статусу. +10"
          },
          {
            "id": "basic_item_5",
            "score": 10,
            "subtask": "Форма создания запроса на проверку. +10"
          },
          {
            "id": "basic_item_6",
            "score": 20,
            "subtask": "Форма проверки и самопроверки задания. +20"
          },
          {
            "id": "basic_item_7",
            "score": 10,
            "subtask": "Страница со списком оценок работ (reviews). +10"
          },
          {
            "id": "basic_item_8",
            "score": 10,
            "subtask": "Список оценок можно сортировать по всем полям/колонкам, где сортировка применима. +10"
          },
          {
            "id": "basic_item_9",
            "score": 10,
            "subtask": "Список оценок можно фильтровать по заданию, выполнившему студенту и проверяющему. Есть . +10"
          },
          {
            "id": "basic_item_10",
            "score": 10,
            "subtask": "Страница или окно с деталями оценки одного проверяющего. +10"
          },
          {
            "id": "basic_item_11",
            "score": 10,
            "subtask": "Главная страница со ссылками на остальные доступные страницы ИЛИ всегда видимое меню для навигации. +10"
          },
          {
            "id": "advanced_item_0",
            "score": 10,
            "subtask": "Пометить пункт как штраф ИЛИ возможность указать минимальный балл меньше 0. +10"
          },
          {
            "id": "advanced_item_1",
            "score": 10,
            "subtask": "Пометить пункт как проверяемый только ментором (скрывать при кросс-чеке), или более сложная система ролей при проверке. +10"
          },
          {
            "id": "advanced_item_2",
            "score": 10,
            "subtask": "Объединение требований в категории (basic scope, advanced, etc). +10"
          },
          {
            "id": "advanced_item_3",
            "score": 10,
            "subtask": "Импорт пунктов и категорий в формате RSS Checklist; +10"
          },
          {
            "id": "advanced_item_4",
            "score": 30,
            "subtask": "Импорт пунктов и категорий в markdown формате, в котором описано большинство задач RSS. +30"
          },
          {
            "id": "advanced_item_5",
            "score": 20,
            "subtask": "Экспорт и импорт задания в собственном JSON формате. Побочный эффект - задание легко скопировать, оставив оригинальное без изменений. +20"
          },
          {
            "id": "advanced_item_6",
            "score": 10,
            "subtask": "Кнопки для быстрой оценки (не выполнено - 0 баллов, выполнено частично - 50%, выполнено полностью - 100%), но остаётся возможность указать любое промежуточное значение. +10"
          },
          {
            "id": "advanced_item_7",
            "score": 10,
            "subtask": "Дать возможность проверяющему добавить ещё один пункт со штрафными или поощрительными баллами. Способы реализации могут быть различными, например можно просто дать возможность указывать не только максимальный балл за требование, но и минимальный меньше ноля. +10"
          },
          {
            "id": "advanced_item_8",
            "score": 10,
            "subtask": "Сделать поле комментария обязательным, если оценка не совпадает с самопроверкой. +10"
          },
          {
            "id": "advanced_item_9",
            "score": 10,
            "subtask": "Промежуточное состояние проверки (и самопроверки тоже) можно сохранить, не публикуя её. +10"
          },
          {
            "id": "advanced_item_10",
            "score": 10,
            "subtask": "Возможность оставить обратную связь проверяющему - поблагодарить или пожаловаться. +10"
          },
          {
            "id": "advanced_item_11",
            "score": 30,
            "subtask": "Возможность оспорить оценку по каждому пункту. +30"
          },
          {
            "id": "advanced_item_12",
            "score": 10,
            "subtask": "Принять решение по оспариваемому пункту может не только проверяющий, но и пользователь со специальной ролью. +10"
          },
          {
            "id": "advanced_item_13",
            "score": 20,
            "subtask": "Страница со списком кросс-чек сессий. Автор заданий (или другая роль на ваше усмотрение) может создавать и редактировать сессии. +20"
          },
          {
            "id": "advanced_item_14",
            "score": 10,
            "subtask": "Студенты могут создавать запросы на проверку в рамках конкретной кросс-чек сессии. +10"
          },
          {
            "id": "advanced_item_15",
            "score": 10,
            "subtask": "Автор задания может остановить сбор запросов на проверку в рамках кросс-чек сессии и случайным образом распределить проверяющих. +10"
          },
          {
            "id": "advanced_item_16",
            "score": 10,
            "subtask": "Автор задания может завершить кросс-чек сессию, после чего студент может посмотреть свою итоговую оценку. +10"
          },
          {
            "id": "extra_item_0",
            "score": 30,
            "subtask": "Каждое действие, меняющее данные, доступно только при наличии у пользователя соответствующей роли. Набор ролей можно взять из примера или придумать свои. +30"
          },
          {
            "id": "extra_item_1",
            "score": 20,
            "subtask": "Полноценная авторизация через GitHub OAuth. Для удобства проверки выбор ролей лучше оставить при логине. +20"
          },
          {
            "id": "extra_item_2",
            "score": 10,
            "subtask": "В исходной базе (db.json) есть примеры сущностей каждого типа. +10"
          },
          {
            "id": "extra_item_3",
            "score": 10,
            "subtask": "В исходной базе (db.json) воспроизведено задание xcheck и создан запрос на его оценку. +10 бонусных очков за стиль"
          },
          {
            "id": "extra_item_4",
            "score": 30,
            "subtask": "Дополнительные полезные возможности, не описанные в требованиях к заданию. Для оценки должны обязательно быть описаны в README. до +30"
          },
          {
            "id": "extra_item_5",
            "score": 20,
            "subtask": "README файл в репозитории с описанием используемых технологий, инструкцией для начала разработки и для деплоя продакшн версии. +20"
          },
          {
            "id": "extra_item_6",
            "score": 50,
            "subtask": "Написаны юнит-тесты, code coverage > 50%. Способ получения coverage report описан в README. до +50"
          },
          {
            "id": "extra_item_7",
            "score": 15,
            "subtask": "По названиям юнит тестов понятно, что они тестируют. Тесты не просто вызывают код, но и делают осмысленные ассерты. до +30, если code coverage меньше 50%, максимальная оценка снижается пропорционально (при 25% максимум +15 баллов)."
          },
          {
            "id": "extra_item_8",
            "score": 20,
            "subtask": "Использован eslint preset (не обязательно airbnb) и нет предупреждений и ошибок. +20"
          },
          {
            "id": "extra_item_9",
            "score": 10,
            "subtask": "В репозитории есть \"следы\" активной командной работы - комментарии в пулл реквестах. +10"
          }
        ]
      }
    },
    {
      "id": "rev-req-22",
      "crossCheckSessionId": "xcheck",
      "author": "48lika48",
      "task": "xcheck",
      "state": "PUBLISHED",
      "url": "",
      "urlPR": "",
      "selfGrade": {
        "task": "xcheck",
        "items": [
          {
            "id": "basic_item_0",
            "score": 10,
            "subtask": "Упрощённая страница/окно авторизации. +10"
          },
          {
            "id": "basic_item_1",
            "score": 10,
            "subtask": "Страница со списком задач (tasks). +10"
          },
          {
            "id": "basic_item_2",
            "score": 20,
            "subtask": "Форма (на отдельной странице или в окне) создания и редактирования задачи. +20"
          },
          {
            "id": "basic_item_3",
            "score": 10,
            "subtask": "Страница со списком запросов на проверку (review requests). +10"
          },
          {
            "id": "basic_item_4",
            "score": 10,
            "subtask": "Список запросов на проверку можно сортировать и фильтровать по заданию, выполнившему студенту и статусу. +10"
          },
          {
            "id": "basic_item_5",
            "score": 10,
            "subtask": "Форма создания запроса на проверку. +10"
          },
          {
            "id": "basic_item_6",
            "score": 20,
            "subtask": "Форма проверки и самопроверки задания. +20"
          },
          {
            "id": "basic_item_7",
            "score": 10,
            "subtask": "Страница со списком оценок работ (reviews). +10"
          },
          {
            "id": "basic_item_8",
            "score": 10,
            "subtask": "Список оценок можно сортировать по всем полям/колонкам, где сортировка применима. +10"
          },
          {
            "id": "basic_item_9",
            "score": 10,
            "subtask": "Список оценок можно фильтровать по заданию, выполнившему студенту и проверяющему. Есть . +10"
          },
          {
            "id": "basic_item_10",
            "score": 10,
            "subtask": "Страница или окно с деталями оценки одного проверяющего. +10"
          },
          {
            "id": "basic_item_11",
            "score": 10,
            "subtask": "Главная страница со ссылками на остальные доступные страницы ИЛИ всегда видимое меню для навигации. +10"
          },
          {
            "id": "advanced_item_0",
            "score": 10,
            "subtask": "Пометить пункт как штраф ИЛИ возможность указать минимальный балл меньше 0. +10"
          },
          {
            "id": "advanced_item_1",
            "score": 10,
            "subtask": "Пометить пункт как проверяемый только ментором (скрывать при кросс-чеке), или более сложная система ролей при проверке. +10"
          },
          {
            "id": "advanced_item_2",
            "score": 10,
            "subtask": "Объединение требований в категории (basic scope, advanced, etc). +10"
          },
          {
            "id": "advanced_item_3",
            "score": 10,
            "subtask": "Импорт пунктов и категорий в формате RSS Checklist; +10"
          },
          {
            "id": "advanced_item_4",
            "score": 30,
            "subtask": "Импорт пунктов и категорий в markdown формате, в котором описано большинство задач RSS. +30"
          },
          {
            "id": "advanced_item_5",
            "score": 20,
            "subtask": "Экспорт и импорт задания в собственном JSON формате. Побочный эффект - задание легко скопировать, оставив оригинальное без изменений. +20"
          },
          {
            "id": "advanced_item_6",
            "score": 10,
            "subtask": "Кнопки для быстрой оценки (не выполнено - 0 баллов, выполнено частично - 50%, выполнено полностью - 100%), но остаётся возможность указать любое промежуточное значение. +10"
          },
          {
            "id": "advanced_item_7",
            "score": 10,
            "subtask": "Дать возможность проверяющему добавить ещё один пункт со штрафными или поощрительными баллами. Способы реализации могут быть различными, например можно просто дать возможность указывать не только максимальный балл за требование, но и минимальный меньше ноля. +10"
          },
          {
            "id": "advanced_item_8",
            "score": 10,
            "subtask": "Сделать поле комментария обязательным, если оценка не совпадает с самопроверкой. +10"
          },
          {
            "id": "advanced_item_9",
            "score": 10,
            "subtask": "Промежуточное состояние проверки (и самопроверки тоже) можно сохранить, не публикуя её. +10"
          },
          {
            "id": "advanced_item_10",
            "score": 10,
            "subtask": "Возможность оставить обратную связь проверяющему - поблагодарить или пожаловаться. +10"
          },
          {
            "id": "advanced_item_11",
            "score": 30,
            "subtask": "Возможность оспорить оценку по каждому пункту. +30"
          },
          {
            "id": "advanced_item_12",
            "score": 10,
            "subtask": "Принять решение по оспариваемому пункту может не только проверяющий, но и пользователь со специальной ролью. +10"
          },
          {
            "id": "advanced_item_13",
            "score": 20,
            "subtask": "Страница со списком кросс-чек сессий. Автор заданий (или другая роль на ваше усмотрение) может создавать и редактировать сессии. +20"
          },
          {
            "id": "advanced_item_14",
            "score": 10,
            "subtask": "Студенты могут создавать запросы на проверку в рамках конкретной кросс-чек сессии. +10"
          },
          {
            "id": "advanced_item_15",
            "score": 10,
            "subtask": "Автор задания может остановить сбор запросов на проверку в рамках кросс-чек сессии и случайным образом распределить проверяющих. +10"
          },
          {
            "id": "advanced_item_16",
            "score": 10,
            "subtask": "Автор задания может завершить кросс-чек сессию, после чего студент может посмотреть свою итоговую оценку. +10"
          },
          {
            "id": "extra_item_0",
            "score": 30,
            "subtask": "Каждое действие, меняющее данные, доступно только при наличии у пользователя соответствующей роли. Набор ролей можно взять из примера или придумать свои. +30"
          },
          {
            "id": "extra_item_1",
            "score": 20,
            "subtask": "Полноценная авторизация через GitHub OAuth. Для удобства проверки выбор ролей лучше оставить при логине. +20"
          },
          {
            "id": "extra_item_2",
            "score": 10,
            "subtask": "В исходной базе (db.json) есть примеры сущностей каждого типа. +10"
          },
          {
            "id": "extra_item_3",
            "score": 10,
            "subtask": "В исходной базе (db.json) воспроизведено задание xcheck и создан запрос на его оценку. +10 бонусных очков за стиль"
          },
          {
            "id": "extra_item_4",
            "score": 30,
            "subtask": "Дополнительные полезные возможности, не описанные в требованиях к заданию. Для оценки должны обязательно быть описаны в README. до +30"
          },
          {
            "id": "extra_item_5",
            "score": 20,
            "subtask": "README файл в репозитории с описанием используемых технологий, инструкцией для начала разработки и для деплоя продакшн версии. +20"
          },
          {
            "id": "extra_item_6",
            "score": 50,
            "subtask": "Написаны юнит-тесты, code coverage > 50%. Способ получения coverage report описан в README. до +50"
          },
          {
            "id": "extra_item_7",
            "score": 15,
            "subtask": "По названиям юнит тестов понятно, что они тестируют. Тесты не просто вызывают код, но и делают осмысленные ассерты. до +30, если code coverage меньше 50%, максимальная оценка снижается пропорционально (при 25% максимум +15 баллов)."
          },
          {
            "id": "extra_item_8",
            "score": 20,
            "subtask": "Использован eslint preset (не обязательно airbnb) и нет предупреждений и ошибок. +20"
          },
          {
            "id": "extra_item_9",
            "score": 10,
            "subtask": "В репозитории есть \"следы\" активной командной работы - комментарии в пулл реквестах. +10"
          }
        ]
      }
    },
    {
      "id": "rev-req-24",
      "crossCheckSessionId": "xcheck",
      "author": "thespirit3000",
      "task": "xcheck",
      "state": "PUBLISHED",
      "url": "",
      "urlPR": "",
      "selfGrade": {
        "task": "xcheck",
        "items": [
          {
            "id": "basic_item_0",
            "score": 10,
            "subtask": "Упрощённая страница/окно авторизации. +10"
          },
          {
            "id": "basic_item_1",
            "score": 10,
            "subtask": "Страница со списком задач (tasks). +10"
          },
          {
            "id": "basic_item_2",
            "score": 20,
            "subtask": "Форма (на отдельной странице или в окне) создания и редактирования задачи. +20"
          },
          {
            "id": "basic_item_3",
            "score": 10,
            "subtask": "Страница со списком запросов на проверку (review requests). +10"
          },
          {
            "id": "basic_item_4",
            "score": 10,
            "subtask": "Список запросов на проверку можно сортировать и фильтровать по заданию, выполнившему студенту и статусу. +10"
          },
          {
            "id": "basic_item_5",
            "score": 10,
            "subtask": "Форма создания запроса на проверку. +10"
          },
          {
            "id": "basic_item_6",
            "score": 20,
            "subtask": "Форма проверки и самопроверки задания. +20"
          },
          {
            "id": "basic_item_7",
            "score": 10,
            "subtask": "Страница со списком оценок работ (reviews). +10"
          },
          {
            "id": "basic_item_8",
            "score": 10,
            "subtask": "Список оценок можно сортировать по всем полям/колонкам, где сортировка применима. +10"
          },
          {
            "id": "basic_item_9",
            "score": 10,
            "subtask": "Список оценок можно фильтровать по заданию, выполнившему студенту и проверяющему. Есть . +10"
          },
          {
            "id": "basic_item_10",
            "score": 10,
            "subtask": "Страница или окно с деталями оценки одного проверяющего. +10"
          },
          {
            "id": "basic_item_11",
            "score": 10,
            "subtask": "Главная страница со ссылками на остальные доступные страницы ИЛИ всегда видимое меню для навигации. +10"
          },
          {
            "id": "advanced_item_0",
            "score": 10,
            "subtask": "Пометить пункт как штраф ИЛИ возможность указать минимальный балл меньше 0. +10"
          },
          {
            "id": "advanced_item_1",
            "score": 10,
            "subtask": "Пометить пункт как проверяемый только ментором (скрывать при кросс-чеке), или более сложная система ролей при проверке. +10"
          },
          {
            "id": "advanced_item_2",
            "score": 10,
            "subtask": "Объединение требований в категории (basic scope, advanced, etc). +10"
          },
          {
            "id": "advanced_item_3",
            "score": 10,
            "subtask": "Импорт пунктов и категорий в формате RSS Checklist; +10"
          },
          {
            "id": "advanced_item_4",
            "score": 30,
            "subtask": "Импорт пунктов и категорий в markdown формате, в котором описано большинство задач RSS. +30"
          },
          {
            "id": "advanced_item_5",
            "score": 20,
            "subtask": "Экспорт и импорт задания в собственном JSON формате. Побочный эффект - задание легко скопировать, оставив оригинальное без изменений. +20"
          },
          {
            "id": "advanced_item_6",
            "score": 10,
            "subtask": "Кнопки для быстрой оценки (не выполнено - 0 баллов, выполнено частично - 50%, выполнено полностью - 100%), но остаётся возможность указать любое промежуточное значение. +10"
          },
          {
            "id": "advanced_item_7",
            "score": 10,
            "subtask": "Дать возможность проверяющему добавить ещё один пункт со штрафными или поощрительными баллами. Способы реализации могут быть различными, например можно просто дать возможность указывать не только максимальный балл за требование, но и минимальный меньше ноля. +10"
          },
          {
            "id": "advanced_item_8",
            "score": 10,
            "subtask": "Сделать поле комментария обязательным, если оценка не совпадает с самопроверкой. +10"
          },
          {
            "id": "advanced_item_9",
            "score": 10,
            "subtask": "Промежуточное состояние проверки (и самопроверки тоже) можно сохранить, не публикуя её. +10"
          },
          {
            "id": "advanced_item_10",
            "score": 10,
            "subtask": "Возможность оставить обратную связь проверяющему - поблагодарить или пожаловаться. +10"
          },
          {
            "id": "advanced_item_11",
            "score": 30,
            "subtask": "Возможность оспорить оценку по каждому пункту. +30"
          },
          {
            "id": "advanced_item_12",
            "score": 10,
            "subtask": "Принять решение по оспариваемому пункту может не только проверяющий, но и пользователь со специальной ролью. +10"
          },
          {
            "id": "advanced_item_13",
            "score": 20,
            "subtask": "Страница со списком кросс-чек сессий. Автор заданий (или другая роль на ваше усмотрение) может создавать и редактировать сессии. +20"
          },
          {
            "id": "advanced_item_14",
            "score": 10,
            "subtask": "Студенты могут создавать запросы на проверку в рамках конкретной кросс-чек сессии. +10"
          },
          {
            "id": "advanced_item_15",
            "score": 10,
            "subtask": "Автор задания может остановить сбор запросов на проверку в рамках кросс-чек сессии и случайным образом распределить проверяющих. +10"
          },
          {
            "id": "advanced_item_16",
            "score": 10,
            "subtask": "Автор задания может завершить кросс-чек сессию, после чего студент может посмотреть свою итоговую оценку. +10"
          },
          {
            "id": "extra_item_0",
            "score": 30,
            "subtask": "Каждое действие, меняющее данные, доступно только при наличии у пользователя соответствующей роли. Набор ролей можно взять из примера или придумать свои. +30"
          },
          {
            "id": "extra_item_1",
            "score": 20,
            "subtask": "Полноценная авторизация через GitHub OAuth. Для удобства проверки выбор ролей лучше оставить при логине. +20"
          },
          {
            "id": "extra_item_2",
            "score": 10,
            "subtask": "В исходной базе (db.json) есть примеры сущностей каждого типа. +10"
          },
          {
            "id": "extra_item_3",
            "score": 10,
            "subtask": "В исходной базе (db.json) воспроизведено задание xcheck и создан запрос на его оценку. +10 бонусных очков за стиль"
          },
          {
            "id": "extra_item_4",
            "score": 30,
            "subtask": "Дополнительные полезные возможности, не описанные в требованиях к заданию. Для оценки должны обязательно быть описаны в README. до +30"
          },
          {
            "id": "extra_item_5",
            "score": 20,
            "subtask": "README файл в репозитории с описанием используемых технологий, инструкцией для начала разработки и для деплоя продакшн версии. +20"
          },
          {
            "id": "extra_item_6",
            "score": 50,
            "subtask": "Написаны юнит-тесты, code coverage > 50%. Способ получения coverage report описан в README. до +50"
          },
          {
            "id": "extra_item_7",
            "score": 15,
            "subtask": "По названиям юнит тестов понятно, что они тестируют. Тесты не просто вызывают код, но и делают осмысленные ассерты. до +30, если code coverage меньше 50%, максимальная оценка снижается пропорционально (при 25% максимум +15 баллов)."
          },
          {
            "id": "extra_item_8",
            "score": 20,
            "subtask": "Использован eslint preset (не обязательно airbnb) и нет предупреждений и ошибок. +20"
          },
          {
            "id": "extra_item_9",
            "score": 10,
            "subtask": "В репозитории есть \"следы\" активной командной работы - комментарии в пулл реквестах. +10"
          }
        ]
      }
    }
  ],
  "reviews": [
  ],
  "disputes": [
    {
      "reviewId": "rev-id-1",
      "state": "ONGOING",
      "item": "extra_p1",
      "comment": "Check out the 'All things' page to see all things that were implemented",
      "suggestedScore": 30
    }
  ]
}
